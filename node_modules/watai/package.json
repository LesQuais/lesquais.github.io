{
  "name": "watai",
  "version": "0.6.2-alpha.2",
  "description": "Integration testing for the modern web",
  "keywords": [
    "test",
    "testing",
    "integration",
    "functional",
    "validation",
    "acceptance",
    "behavior",
    "behaviour",
    "BDD",
    "browser",
    "cross-browser",
    "selenium",
    "webdriver"
  ],
  "homepage": "https://github.com/MattiSG/Watai/",
  "bugs": {
    "url": "https://github.com/MattiSG/Watai/issues"
  },
  "author": {
    "name": "Matti Schneider",
    "email": "hi@mattischneider.fr",
    "url": "http://mattischneider.fr"
  },
  "contributors": [
    {
      "name": "Nicolas Dupont",
      "url": "http://ontherailsagain.com"
    },
    {
      "name": "Thomas De Bona",
      "url": "https://github.com/debona"
    }
  ],
  "files": [
    "src",
    "doc",
    "README.md",
    "Changelog.md",
    "npm-shrinkwrap.json",
    "license.AGPL.txt"
  ],
  "main": "src/Watai.js",
  "bin": {
    "watai": "src/index.js"
  },
  "directories": {
    "lib": "./src",
    "doc": "./doc",
    "example": "./example"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/MattiSG/Watai.git"
  },
  "scripts": {
    "test": "istanbul test _mocha test/unit test/functional",
    "test-integration": "istanbul test _mocha test/integration",
    "test-examples": "find example -mindepth 1 -maxdepth 1 -type d | xargs -I suite ./src/index.js suite",
    "test-examples-parallel": "find example -mindepth 1 -maxdepth 1 -type d | xargs -I suite -P 4 ./src/index.js suite",
    "test-security": "retire --node --package",
    "test-exhaustive": "npm run test-examples && npm test && npm run test-integration && npm run test-security"
  },
  "engines": {
    "node": ">=0.6.18 <0.11",
    "npm": "> 1.1"
  },
  "dependencies": {
    "q": ">= 0.9.5",
    "mootools": "1.4",
    "winston": "0.6",
    "wd": "0.1",
    "mattisg.configloader": "0.2",
    "growl": ">= 1.5"
  },
  "optionalDependencies": {
    "growl": ">= 1.5"
  },
  "devDependencies": {
    "should": ">= 1.2.2 < 2",
    "mocha": ">= 1.4",
    "istanbul": "0.1",
    "retire": "0.1"
  },
  "preferGlobal": true,
  "readme": "Watai\n=====\n\nWatai _(Web Application Testing Automation Infrastructure)_ is a **declarative, bottom-up BDD, full-stack web testing** framework.\n\nIt is both a test runner engine (i.e. it executes tests) and a set of architectural patterns to make you write **maintainable**, **solid** end-to-end (GUI) tests. It automatically handles asynchronous operations without any work on your side.\n\nThe tests you write will automate navigation on your webapp through actual browsers, just like an actual user would.\n\n➥ Read more about [what is Watai](https://github.com/MattiSG/Watai/wiki/Definition).\n\nBenefits\n--------\n\n1. Creating a safety net to catch regressions in your webapp.\n2. Checking cross-browser consistency automatically.\n3. Defining expected behavior and testing it at user level, not in isolation as in unit tests.\n\n➥ Read more about [when and how you should use Watai](https://github.com/MattiSG/Watai/wiki/Rationale).\n\nStatus\n------\n\n### Watai is currently beta-level software ###\n\nThis means that its stability and feature set are evolving. It is constantly improving, and a high level of quality control is applied to its development. But mistakes can always happen.\n\nWe are currently using Watai in a big live project, and at least two other teams do so. You are highly encouraged to try out Watai and see if it fits your needs. Getting started and writing your first test should take you around 15 minutes, and the results should get you quite excited  :)\n\nIf anything goes wrong, please open an issue, and I'll do my best to get you out of trouble!\n\n### Versioning ###\n\n[SemVer](http://semver.org/) is followed to convey the state of the software through version numbers.\n\nYou can rely on the fact that the syntax you write your tests in won't change until a minor version number (the `y` in `x.y.z`) is updated. Versions not sufficiently field-tested will be suffixed with `-alpha`.\n\nInstalling\n----------\n\nThis installation guide assumes a POSIX-compliant OS, such as Mac OS X or Linux. If you're under Windows, see the [Windows installation guide](https://github.com/MattiSG/Watai/wiki/Windows-installation).\n\n### Dependencies ###\n\n#### Node & NPM ####\n\nWatai runs as a [Node.js](http://nodejs.org) module. You will therefore need the Node runtime (≥0.6.8 <0.11) and package manager (NPM ≥ 1.2).\n\nIf you’re under OSX and have [Homebrew](http://mxcl.github.com/homebrew/):\n\n\tbrew install node\n\nOtherwise, [download](http://nodejs.org/download) the Node+NPM package for your environment if you don't already have it.\n\n#### Selenium Server ####\n\nWatai uses Selenium-WebDriver to automate browsers. You will therefore need a Selenium _standalone server_ to send commands to the browsers.\n\nIf you’re under OSX and have [Homebrew](http://mxcl.github.com/homebrew/):\n\n\tbrew install selenium-server-standalone\n\n…and start it with the command given at the end of the “Caveats” section.\n\nOtherwise, [download the latest JAR](https://code.google.com/p/selenium/downloads/list?can=3&q=selenium-server-standalone) and start it (preferably in the background):\n\n\tjava -jar path/to/downloaded/selenium-server-standalone.jar\n\nThis will output many `INFO` lines over a few seconds. You know it is done when it says:\n\n\t… INFO - Started org.openqa.jetty.jetty.Server@…\n\nYou will obviously need Java (≥ 1.5). If you don’t have it yet (but you probably wouldn’t be reading this README), [download it now](http://java.com/download).\n\n#### Optional: ChromeDriver ####\n\nIf you want to [test with Chrome](https://github.com/MattiSG/Watai/wiki/Testing-with-Chrome) (or with other browsers), you will have to install some additional software.\n\nThis is completely optional, and you will be operational faster if you do the tutorial with Firefox. The testing itself will be a bit slower, but you may come back to add Chrome later on if you like Watai  :)\n\n### Package ###\n\nOnce you have both Node and a Selenium server, you can consider installing Watai itself.\n\n#### Global install (easiest) ####\n\n\tsudo npm install -g watai\n\nNPM will automatically create the `watai` alias for you. If you decide you don’t want to use Watai later on, simply `npm uninstall -g` it.\n\n#### Local install ####\n\n\tcd choose/your/install/folder\n\tnpm install watai\n\talias watai=\"$(pwd)/node_modules/watai/go\"\n\nThis will create a `node_modules` folder with all dependencies in the current directory. A good way to give Watai a quick look if you’re afraid of `sudo`ing.\n\n#### From behind a proxy ####\n\nIf your proxy configuration prevents you from using `npm install` properly (i.e. you get `ERRTIMEOUT` errors), download the latest Watai **with NPM dependencies** package from the [Releases](https://github.com/MattiSG/Watai/releases) tab, unzip it and:\n\n\talias watai='node path/to/unzipped/folder/src'\n\nNote the `/src` at the end!\n\n### Validation ###\n\nLet’s make sure you’re fully ready to use Watai by typing:\n\n\twatai --installed\n\n### Then, [get started with Watai](https://github.com/MattiSG/Watai/wiki/Tutorial)! ###\n\n- - - - - - -\n\nLicense\n-------\n\nThe code for this software is distributed under an [AGPL license](http://www.gnu.org/licenses/agpl.html). That means you may use it to test any type of software, be it free or proprietary. But if you make any changes to the test engine itself (i.e. this library), even if it is not redistributed and provided only as a webservice, you have to share them back with the community. Sounds fair?  :)\n\nContact the author if you have any specific need or question regarding licensing.\n",
  "readmeFilename": "README.md",
  "_id": "watai@0.6.2-alpha.2",
  "_from": "watai@"
}
